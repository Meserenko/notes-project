{"version":3,"sources":["sidebaritem/sidebarItem.js","helpers.js","sidebar/sidebar.js","editor/editor.js","editor/emptyEditor.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarItemComponent","selectNote","n","i","props","deleteNote","note","window","confirm","title","str","this","_index","_note","selectedNoteIndex","onClick","ListItem","className","selected","body","substr","replace","timestamp","a","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","timeConverter","React","Component","SidebarComponent","updateSearch","e","setState","search","target","value","newNoteBtnClick","addingNote","state","updateTitle","txt","newNote","notes","sort","b","filteredNotes","filter","toLowerCase","indexOf","type","placeholder","onKeyUp","onChange","length","map","EditorComponent","componentDidMount","text","selectedNote","id","componentDidUpdate","updateBody","val","update","c","d","h","apply","f","g","arguments","clearTimeout","setTimeout","debounce","noteUpdate","EmptyEditorComponent","disabled","App","clickToNotes","switchToTable","list","switchToList","tableLook","firebase","firestore","collection","onSnapshot","serverUpdate","docs","_doc","data","index","noteObj","doc","FieldValue","serverTimestamp","add","newFromDB","newID","newNoteIndex","noteIndex","delete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fa0cc03.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { removeHTMLTags } from '../helpers';\r\nimport './sidebarItem.css'\r\n\r\nclass SidebarItemComponent extends React.Component {\r\n\r\n    render() {\r\n\r\n       function timeConverter(timestamp) {\r\n            let a = new Date(timestamp * 1000),\r\n                months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],\r\n                year = a.getFullYear(),\r\n                month = months[a.getMonth()],\r\n                date = a.getDate(),\r\n                hour = a.getHours() < 10 ? '0' + a.getHours() : a.getHours(),\r\n                min = a.getMinutes() < 10 ? '0' + a.getMinutes() : a.getMinutes(),\r\n                sec = a.getSeconds() < 10 ? '0' + a.getSeconds() : a.getSeconds(),\r\n                time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec\r\n\r\n            return time;\r\n        }\r\n\r\n        const { _index, _note, selectedNoteIndex } = this.props;\r\n\r\n        return(\r\n            <div key={_index} onClick={() => this.selectNote(_note, _index)}>\r\n                <ListItem\r\n                    className='listItem'\r\n                    selected={selectedNoteIndex === _index}>\r\n                    <div className='textSection'>\r\n                        <p><b>{_note.title}</b></p>\r\n                        <p className='textSectionBody'>{removeHTMLTags(_note.body.substr(0, 20)) + '...'}</p>\r\n                        <p>{timeConverter(_note.timestamp)}</p>\r\n                    </div>\r\n                    <DeleteIcon onClick={() => this.deleteNote(_note)}\r\n                                className='deleteIcon' />\r\n                </ListItem>\r\n            </div>\r\n        );\r\n    }\r\n    selectNote = (n, i) => this.props.selectNote(n, i);\r\n    deleteNote = (note) => {\r\n        if(window.confirm(`Are you sure you want to delete: ${note.title}`)) {\r\n            this.props.deleteNote(note);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default SidebarItemComponent;","export default function debounce(a,b,c){\r\n    let d,e;\r\n    return function(){\r\n        function h(){\r\n            d=null;\r\n            c||(e=a.apply(f,g));\r\n        }\r\n        let f=this,g=arguments;\r\n        return (clearTimeout(d),d=setTimeout(h,b),c&&!d&&(e=a.apply(f,g)),e)\r\n    }\r\n}\r\n\r\nexport function removeHTMLTags (str) {\r\n    return str.replace(/<[^>]*>?/gm, '');\r\n}","import React from 'react';\r\nimport SidebarItemComponent from '../sidebaritem/sidebarItem';\r\nimport './sidebar.css'\r\nimport {BsPlusSquare} from 'react-icons/bs'\r\nimport {ImCancelCircle} from 'react-icons/im'\r\nimport {MdDone} from 'react-icons/md'\r\n\r\nclass SidebarComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            addingNote: false,\r\n            title: null,\r\n            search: ''\r\n        };\r\n    }\r\n\r\n    updateSearch = (e) => {\r\n        this.setState({search: e.target.value})\r\n    }\r\n\r\n    render() {\r\n\r\n        const {notes, selectedNoteIndex} = this.props;\r\n\r\n        if (notes) {\r\n            notes.sort((a, b) => b.timestamp - a.timestamp)\r\n            let filteredNotes = notes.filter(note => {\r\n                return note.title.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 || note.body.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\r\n            });\r\n            return (\r\n                <div className='sidebarContainer'>\r\n                    <button\r\n                        onClick={this.newNoteBtnClick}\r\n                        className='newNoteBtn'>{this.state.addingNote ? <BsPlusSquare className='addingNoteDisplayNone'/> : <BsPlusSquare />}</button>\r\n\r\n                    {\r\n                        this.state.addingNote ?\r\n                            <div>\r\n                                <div>\r\n                                    <input type='text'\r\n                                           className='newNoteInput'\r\n                                           placeholder='Enter note title'\r\n                                           onKeyUp={(e) => this.updateTitle(e.target.value)}>\r\n                                    </input>\r\n                                </div>\r\n                                <div className='cancelSubmitBtn'>\r\n                                    <button onClick={this.newNoteBtnClick} className='newNoteBtn'><ImCancelCircle /></button>\r\n                                    <button className='newNoteSubmitBtn' onClick={this.newNote}><MdDone/></button>\r\n                                </div>\r\n                            </div>:\r\n                            null\r\n                    }\r\n                    <input type=\"text\"\r\n                           className='newNoteInput'\r\n                           value={this.state.search}\r\n                           onChange={this.updateSearch}\r\n                           placeholder='Search note by name or body'/>\r\n                    <div className='notesList'>\r\n                        {  filteredNotes.length ?\r\n                            filteredNotes.map((_note, _index) => {\r\n                                return (\r\n                                    <div key={_index} className='note'>\r\n                                        <SidebarItemComponent\r\n                                            _note={_note}\r\n                                            _index={_index}\r\n                                            selectedNoteIndex={selectedNoteIndex}\r\n                                            selectNote={this.selectNote}\r\n                                            deleteNote={this.deleteNote}>\r\n                                        </SidebarItemComponent>\r\n                                    </div>\r\n                                )\r\n                            }) :\r\n                            <div><b>Nothing was found for your request</b></div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n\r\n    newNoteBtnClick = () => {\r\n        this.setState({title: 'New note', addingNote: !this.state.addingNote});\r\n    }\r\n    updateTitle = (txt) => {\r\n        this.setState({title: txt});\r\n        if(!txt) {\r\n            this.setState({title: 'New note'})\r\n        }\r\n    }\r\n    newNote = () => {\r\n        this.props.newNote(this.state.title);\r\n        this.setState({title: null, addingNote: false});\r\n    }\r\n    selectNote = (n, i) => this.props.selectNote(n, i);\r\n    deleteNote = (note) => this.props.deleteNote(note);\r\n\r\n}\r\n\r\nexport default SidebarComponent;","import React from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport debounce from '../helpers';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport './editor.css'\r\n\r\nclass EditorComponent extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            text: '',\r\n            title: '',\r\n            id: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n            this.setState({\r\n                text: this.props.selectedNote.body,\r\n                title: this.props.selectedNote.title,\r\n                id: this.props.selectedNote.id\r\n            });\r\n        }\r\n\r\n\r\n    componentDidUpdate = () => {\r\n        if(this.props.selectedNote.id !== this.state.id) {\r\n            this.setState({\r\n                text: this.props.selectedNote.body,\r\n                title: this.props.selectedNote.title,\r\n                id: this.props.selectedNote.id\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <div className='editorContainer'>\r\n                <BorderColorIcon className='editIcon' />\r\n                <input\r\n                    className='titleInput'\r\n                    placeholder='Note title...'\r\n                    value={this.state.title ? this.state.title : ''}\r\n                    onChange={(e) => this.updateTitle(e.target.value)}>\r\n                </input>\r\n                <ReactQuill\r\n                    value={this.state.text}\r\n                    onChange={this.updateBody}>\r\n                </ReactQuill>\r\n            </div>\r\n        );\r\n    }\r\n    updateBody = async (val) => {\r\n        await this.setState({ text: val });\r\n        this.update();\r\n    };\r\n    updateTitle = async (txt) => {\r\n        await this.setState({ title: txt });\r\n        this.update();\r\n    }\r\n    update = debounce(() => {\r\n        this.props.noteUpdate(this.state.id, {\r\n            title: this.state.title,\r\n            body: this.state.text\r\n        })\r\n    }, 1500);\r\n}\r\n\r\nexport default EditorComponent;","import React from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport './editor.css'\r\n\r\nfunction EmptyEditorComponent() {\r\n\r\n\r\n        return(\r\n            <div className='editorContainer'>\r\n                <BorderColorIcon className='editIcon' />\r\n                <input\r\n                    className='titleInput'\r\n                    placeholder='Please select or create a note...'\r\n                    disabled>\r\n                </input>\r\n                <ReactQuill>\r\n                </ReactQuill>\r\n            </div>\r\n        );\r\n}\r\nexport default EmptyEditorComponent;","import React from 'react';\nimport SidebarComponent from './sidebar/sidebar';\nimport EditorComponent from './editor/editor';\nimport firebase from 'firebase'\nimport './App.css';\nimport {AiOutlineUnorderedList, AiOutlineTable} from 'react-icons/ai'\nimport { IoChevronBack } from 'react-icons/io5'\nimport EmptyEditorComponent from \"./editor/emptyEditor\";\n\n\n\nclass App extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            selectedNoteIndex: null,\n            selectedNote: null,\n            notes: null,\n            tableLook: false\n        };\n    }\n\n    clickToNotes = () => {\n        this.setState({selectedNote: !this.state.selectedNote})\n    }\n\n    switchToTable = () => {\n        this.setState({list: true})\n    }\n\n    switchToList = () => {\n        this.setState({list: false})\n    }\n\n    tableLook = () => {\n        return (\n            <div className=\"app-container\">\n                {\n                    this.state.selectedNote ?\n                        <div className='editorContainer'>\n                            <button onClick={this.clickToNotes} className='switchBtn'> <IoChevronBack /></button>\n                            <EditorComponent selectedNote={this.state.selectedNote}\n                                             selectedNoteIndex={this.state.selectedNoteIndex}\n                                             notes={this.state.notes}\n                                             noteUpdate={this.noteUpdate}/>\n                        </div>\n                        :\n                        <SidebarComponent\n                            selectedNoteIndex={this.state.selectedNoteIndex}\n                            notes={this.state.notes}\n                            deleteNote={this.deleteNote}\n                            selectNote={this.selectNote}\n                            newNote={this.newNote}/>\n                }\n            </div>\n        )\n    }\n\n\n\n    render() {\n\n        return (\n        <div id='root'>\n            <div className='switchBtnContainer'>\n                <button className='switchBtn' onClick={this.switchToTable}><AiOutlineUnorderedList /></button>\n                <button className='switchBtn' onClick={this.switchToList}><AiOutlineTable /></button>\n            </div>\n            <div className=\"app-container\">\n\n\n                { this.state.list ?\n                    <div className=\"app-container\">\n                        <SidebarComponent\n                            selectedNoteIndex={this.state.selectedNoteIndex}\n                            notes={this.state.notes}\n                            deleteNote={this.deleteNote}\n                            selectNote={this.selectNote}\n                            newNote={this.newNote} />\n                        {\n                            this.state.selectedNote ?\n                                <EditorComponent selectedNote={this.state.selectedNote}\n                                                 selectedNoteIndex={this.state.selectedNoteIndex}\n                                                 notes={this.state.notes}\n                                                 noteUpdate={this.noteUpdate} /> :\n                                <div><EmptyEditorComponent /></div>\n                        }\n                    </div> :\n                    this.tableLook()\n                }\n\n            </div>\n        </div>\n\n        );\n    }\n\n    componentDidMount = () => {\n        firebase\n            .firestore()\n            .collection('notes')\n            .onSnapshot(serverUpdate => {\n                const notes = serverUpdate.docs.map(_doc => {\n                    const data = _doc.data();\n                    data['id'] = _doc.id;\n                    return data;\n                });\n                    this.setState({notes: notes});\n            });\n    }\n\n\n    selectNote = (note, index) => this.setState({selectedNoteIndex: index, selectedNote: note});\n    noteUpdate = async (id, noteObj) => {\n       await firebase\n            .firestore()\n            .collection('notes')\n            .doc(id)\n            .update({\n                title: noteObj.title,\n                body: noteObj.body,\n                timestamp: firebase.firestore.FieldValue.serverTimestamp()\n            });\n    }\n    newNote = async (title) => {\n        const note = {\n            title: title,\n            body: ''\n        };\n        const newFromDB = await firebase\n            .firestore()\n            .collection('notes')\n            .add({\n                title: note.title,\n                body: note.body,\n                timestamp: firebase.firestore.FieldValue.serverTimestamp()\n            });\n        const newID = newFromDB.id;\n        await this.setState({notes: [...this.state.notes, note]});\n        const newNoteIndex = this.state.notes.indexOf(this.state.notes.filter(_note => _note.id === newID)[0]);\n        this.setState({selectedNote: this.state.notes[newNoteIndex], selectedNoteIndex: newNoteIndex});\n    }\n    deleteNote = async (note) => {\n        const noteIndex = this.state.notes.indexOf(note);\n        await this.setState({notes: this.state.notes.filter(_note => _note !== note)});\n        if (this.state.selectedNoteIndex === noteIndex) {\n            this.setState({selectedNoteIndex: null, selectedNote: null});\n        } else {\n            this.state.notes.length > 1 ?\n                this.selectNote(this.state.notes[this.state.selectedNoteIndex - 1], this.state.selectedNoteIndex - 1) :\n                this.setState({selectedNoteIndex: null, selectedNote: null});\n        }\n\n        await firebase\n            .firestore()\n            .collection('notes')\n            .doc(note.id)\n            .delete();\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport firebase from \"firebase\";\nimport reportWebVitals from './reportWebVitals';\n\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAMECXylfaNvMwvmK0X006CbEjoRAIZ63I\",\n    authDomain: \"note-project-bb9d5.firebaseapp.com\",\n    projectId: \"note-project-bb9d5\",\n    storageBucket: \"note-project-bb9d5.appspot.com\",\n    messagingSenderId: \"640310835908\",\n    appId: \"1:640310835908:web:fa883e5a5770461528a791\",\n    measurementId: \"G-WC5NGFQEFT\"\n};\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore()\nexport default db\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}